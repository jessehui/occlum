name: OCCLUM CI

# Controls when the action will run. Triggers the workflow on push or pull request
on: [push, pull_request]

env:
  OCCLUM_VERSION: 0.15.1

jobs:
  make-test-on-ubuntu-with-format-checking:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Create container with ubuntu image
      run: docker run -itd --name=ubuntu-test -v $GITHUB_WORKSPACE:/root/occlum occlum/occlum:${{ env.OCCLUM_VERSION }}-ubuntu18.04

    - name: Check C/C++ Format
      run:  docker exec ubuntu-test bash -c 'cd /root/occlum; info=$(make format-check);
        if [[ -n $info ]]; then
          echo "Format error detected.";
          exit 1;
        fi'

    - name: Check Rust Format
      run: docker exec ubuntu-test bash -c 'cd /root/occlum/src/libos; output=$(cargo fmt -- --check 2>&1);retval=$?;
        if [[ retval -eq 1 ]]; then
          echo "Format error detected.";
          exit 1;
        fi'

    - name: Build Dependencies
      run:  docker exec ubuntu-test bash -c "cd /root/occlum; make submodule"

    - name: Build Source
      run:  docker exec ubuntu-test bash -c "cd /root/occlum; OCCLUM_RELEASE_BUILD=y SGX_MODE=SIM make"

    - name: Integration Test
      run:  docker exec ubuntu-test bash -c "cd /root/occlum; SGX_MODE=SIM make test"


  make-test-on-centos:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Create container with centos image
      run: docker run -itd --name=centos-test -v $GITHUB_WORKSPACE:/root/occlum occlum/occlum:${{ env.OCCLUM_VERSION }}-centos8.1

    - name: Build Dependencies
      run:  docker exec centos-test bash -c "cd /root/occlum; make submodule"

    - name: Build Source
      run:  docker exec centos-test bash -c "cd /root/occlum; OCCLUM_RELEASE_BUILD=y SGX_MODE=SIM make"

    - name: Integration Test
      run:  docker exec centos-test bash -c "cd /root/occlum; SGX_MODE=SIM make test"
