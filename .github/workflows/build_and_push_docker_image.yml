name: Occlum Docker Build and Push

# Controls when the action will run. Triggers the workflow on release events
on:
  release:
    types: [published]

env:
  RELEASE_VERSION: $(echo ${GITHUB_REF:10})

jobs:
  generate-centos-image:
      # GitHub Actions doesn't have CentOS VM provided
      runs-on: ubuntu-18.04

      steps:
      - name: Prepare tools
        run: |
          sudo apt-get update
          sudo apt-get install yum
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release version
        id: get_version
        run: |
          echo ${{ env.RELEASE_VERSION }}
          echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10}) # Get RELEASE_VERSION from "ref/tags/<version>"

#       - name: Build and Push Docker images
#         uses: docker/build-push-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#           path: ./tools
#           dockerfile: ./tools/docker/Dockerfile.centos8.1
#           repository: occlumbackup/occlum
#           tags: "${{ env.RELEASE_VERSION }}-centos8.1"

  generate-ubuntu-image:
      runs-on: ubuntu-18.04

      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release version
        id: get_version
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})

#       - name: Build and Push Docker images
#         uses: docker/build-push-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#           path: ./tools
#           dockerfile: ./tools/docker/Dockerfile.ubuntu18.04
#           repository: occlumbackup/occlum
#           tags: "${{ env.RELEASE_VERSION }}-ubuntu18.04"

  test-new-ubuntu-image:
    runs-on: ubuntu-18.04
    needs: generate-ubuntu-image

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Get release version
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})

    - name: Create container with new image
      run: |
        docker run -itd --name=ubuntu-test -v $GITHUB_WORKSPACE:/root/occlum occlumbackup/occlum:${{ env.RELEASE_VERSION }}-ubuntu18.04

    - name: Build Dependencies
      run:  docker exec ubuntu-test bash -c "cd /root/occlum; make submodule"
    
    - name: Build Source
      run:  docker exec ubuntu-test bash -c "cd /root/occlum; OCCLUM_RELEASE_BUILD=y SGX_MODE=SIM make"
    
    - name: Integration Test
      run:  docker exec ubuntu-test bash -c "cd /root/occlum; SGX_MODE=SIM make test"

      

  test-new-centos-image:
    runs-on: ubuntu-18.04
    needs: generate-ubuntu-image

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Get release version
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})

    - name: Create container with new image
      run: |
        docker run -itd --name=ubuntu-test -v $GITHUB_WORKSPACE:/root/occlum occlumbackup/occlum:${{ env.RELEASE_VERSION }}-centos18.04

    - name: Build Dependencies
      run:  docker exec ubuntu-test bash -c "cd /root/occlum; make submodule"
    
    - name: Build Source
      run:  docker exec ubuntu-test bash -c "cd /root/occlum; OCCLUM_RELEASE_BUILD=y SGX_MODE=SIM make"
    
    - name: Integration Test
      run:  docker exec ubuntu-test bash -c "cd /root/occlum; SGX_MODE=SIM make test"

